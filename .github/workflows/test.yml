name: BDD Playwright Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        browser: [chromium, firefox, webkit]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build TypeScript
      run: npm run build
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}
      
    - name: Run tests on ${{ matrix.browser }}
      run: npm run test
      env:
        HEADLESS: true
        BROWSER: ${{ matrix.browser }}
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.browser }}-node${{ matrix.node-version }}
        path: |
          reports/
          dist/
        retention-days: 30
        
    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: screenshots-${{ matrix.browser }}-node${{ matrix.node-version }}
        path: reports/screenshots/
        retention-days: 7

  # Separate job for comprehensive testing
  comprehensive-test:
    timeout-minutes: 90
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build TypeScript
      run: npm run build
      
    - name: Install all Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Run comprehensive test suite
      run: npm run test:report
      env:
        HEADLESS: true
        
    - name: Generate HTML report
      run: |
        if [ -f reports/cucumber_report.json ]; then
          echo "Generating HTML report from JSON..."
          # Add HTML report generation logic here
        fi
        
    - name: Upload comprehensive test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: comprehensive-test-results
        path: |
          reports/
          dist/
        retention-days: 30
        
    - name: Upload HTML report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: html-report
        path: reports/
        retention-days: 30

  # Performance testing job
  performance-test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build TypeScript
      run: npm run build
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium
      
    - name: Run performance tests
      run: |
        echo "Running performance tests..."
        npm run test -- --name "Page load performance"
        npm run test -- --name "Homepage loads successfully"
      env:
        HEADLESS: true
        
    - name: Upload performance results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-results
        path: reports/
        retention-days: 7

  # Security and linting
  quality-checks:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Run TypeScript check
      run: npx tsc --noEmit
      
    - name: Check for security vulnerabilities
      run: npm audit --audit-level moderate
      
    - name: Build check
      run: npm run build

  # Notification job
  notify:
    runs-on: ubuntu-latest
    needs: [test, comprehensive-test, quality-checks]
    if: always()
    
    steps:
    - name: Notify test results
      run: |
        if [ "${{ needs.test.result }}" == "success" ] && [ "${{ needs.comprehensive-test.result }}" == "success" ] && [ "${{ needs.quality-checks.result }}" == "success" ]; then
          echo "✅ All tests passed successfully!"
        else
          echo "❌ Some tests failed. Check the logs for details."
        fi
        
    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && comment.body.includes('## Test Results')
          );
          
          const testResult = '${{ needs.test.result }}';
          const comprehensiveResult = '${{ needs.comprehensive-test.result }}';
          const qualityResult = '${{ needs.quality-checks.result }}';
          
          const status = testResult === 'success' && comprehensiveResult === 'success' && qualityResult === 'success' ? '✅' : '❌';
          
          const body = `## Test Results ${status}
          
          | Job | Status |
          |-----|--------|
          | Test Suite | ${testResult === 'success' ? '✅ Passed' : '❌ Failed'} |
          | Comprehensive Tests | ${comprehensiveResult === 'success' ? '✅ Passed' : '❌ Failed'} |
          | Quality Checks | ${qualityResult === 'success' ? '✅ Passed' : '❌ Failed'} |
          
          **Browser Matrix**: Chromium, Firefox, WebKit  
          **Node.js Versions**: 18.x, 20.x  
          **Test Framework**: Playwright + Cucumber  
          
          View the [workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for detailed logs.`;
          
          if (botComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: body
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
          }
